apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile rootProject.ext.dependencies["support-v7"];
    compile rootProject.ext.dependencies["support-design"];
    compile rootProject.ext.dependencies["support-multidex"];
    compile rootProject.ext.dependencies["butterknife"];//绑定控件id
    compile rootProject.ext.dependencies["glide"];//图片加载器
    compile rootProject.ext.dependencies["gson"];//json解析器
    compile rootProject.ext.dependencies["constraint"];//约束布局
    compile rootProject.ext.dependencies["matisse"];//图片选择器
    compile rootProject.ext.dependencies["recovery"];//崩溃框架
    compile rootProject.ext.dependencies["umeng-analytics"]//友盟统计分析
    compile rootProject.ext.dependencies["volleysharp"];//我的网络请求框架
    compile rootProject.ext.dependencies["ormlitesharp"];//我的数据库框架
    compile rootProject.ext.dependencies["magiclog"];//我的log框架
    compile rootProject.ext.dependencies["nineoldandroids"]//九宫格控件
    compile rootProject.ext.dependencies["rxjava"]//rxjava
    compile rootProject.ext.dependencies["rxandroid"]//rxandroid
    compile rootProject.ext.dependencies["rxandroid"]//rxandroid
    compile rootProject.ext.dependencies["io-card"]//扫描卡片银行卡身份证
    debugCompile rootProject.ext.dependencies["leakcanarydebug"]//debug用内存泄漏
    testCompile rootProject.ext.dependencies["leakcanarytest"]//测试用内存泄漏
    releaseCompile rootProject.ext.dependencies["leakcanaryrelease"]//release用内存泄漏

    testCompile rootProject.ext.testdependencies["junit"];
    compile rootProject.ext.testdependencies["stetho"];

//    debugCompile rootProject.ext.testdependencies["leakcanary"];
//    releaseCompile rootProject.ext.testdependencies["leakcanary-no-op"];
//    testCompile rootProject.ext.testdependencies["leakcanary-no-op"];

}
